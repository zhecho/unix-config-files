global !p
def create_heading(snip):
    # get number after 'h'
    number_of_hash = int(snip.buffer[snip.line].strip()[1:])
    # erase current line
    snip.buffer[snip.line] = ''
    # create string for propper header 
    anon_snippet_body = str("#"*number_of_hash) + str(' ${1:Heading ') + f'{number_of_hash}' + '}'
    # expand anonymous snippet
    snip.expand_anon(anon_snippet_body)
endglobal

pre_expand "create_heading(snip)"
snippet "h(\d+)" "Create heading " br
endsnippet

snippet md_script
\`\`\`${1:bash|txt|sh|json|js}"

${2:SCRIPT_BODY}

\`\`\`

endsnippet

global !p
def create_table(snip):
    # retrieving single line from current string and treat it like tabstops count
    placeholders_string = snip.buffer[snip.line].strip()[2:].split("x",1)
    rows_amount = int(placeholders_string[0])
    columns_amount = int(placeholders_string[1])

    # erase current line
    snip.buffer[snip.line] = ''

    # create anonymous snippet with expected content and number of tabstops
    anon_snippet_title = ' | '.join(['$' + str(col) for col in range(1,columns_amount+1)]) + "\n"
    anon_snippet_delimiter = ':-|' * (columns_amount-1) + ":-\n"
    anon_snippet_body = ""
    for row in range(1,rows_amount+1):
        anon_snippet_body += ' | '.join(['$' + str(row*columns_amount+col) for col in range(1,columns_amount+1)]) + "\n"
    anon_snippet_table = anon_snippet_title + anon_snippet_delimiter + anon_snippet_body

    # expand anonymous snippet
    snip.expand_anon(anon_snippet_table)
endglobal

pre_expand "create_table(snip)"
snippet "tb(\d+x\d+)" "Customizable table" br
endsnippet


